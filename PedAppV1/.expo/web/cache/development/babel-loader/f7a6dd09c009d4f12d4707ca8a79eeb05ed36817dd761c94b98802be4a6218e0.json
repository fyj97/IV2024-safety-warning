{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Paho from \"paho-mqtt\";\nimport { useState, useEffect } from \"react\";\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Svg, Circle, Line } from 'react-native-svg';\nimport { Audio } from 'expo-av';\nimport * as Location from 'expo-location';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar client;\nvar ped_id = parseInt(Math.random() * 100);\nvar futureData = [];\nvar realtimeData = [];\nvar templocation = {\n  timestamp: null,\n  coords: {\n    latitude: null,\n    longitude: null,\n    speed: null\n  }\n};\nvar lasttimestamp = 0;\nvar placename = \"\";\nvar aliveglobal = 2;\nvar ttc = -1;\nvar warningreceivedtime = -1;\nvar globallatency = -1;\nvar coords_interval_ms = 5000;\nvar receivetopic = \"vikram/columbia/summer2023/fromserver/\" + ped_id;\nvar sendtopic = \"vikram/columbia/summer2023/toserver\";\nvar vibration_pattern = {\n  'android': [0, 500, 250, 250, 250],\n  'ios': [0, 250]\n};\nvar alive_chart = {\n  0: {\n    text: \"So far so good\",\n    color: \"#47c906\"\n  },\n  1: {\n    text: \"DANGER \" + ttc + \" UNTIL COLLISION\",\n    color: \"#c90606\"\n  },\n  2: {\n    text: \"Connecting to Server\",\n    color: \"#ffd012\"\n  },\n  3: {\n    text: \"No Server Connection\",\n    color: \"#033dfc\"\n  },\n  4: {\n    text: \"Connected to Server\",\n    color: \"#dbd21a\"\n  }\n};\nvar circlesrad = 7;\nvar circles = [{\n  'color': \"#0000ff\",\n  'x': 600,\n  'y': 736,\n  'name': 'blue'\n}, {\n  'color': \"#ff0000\",\n  'x': 107,\n  'y': 272,\n  'name': 'red'\n}, {\n  'color': \"#12a630\",\n  'x': 728,\n  'y': 300,\n  'name': 'green'\n}, {\n  'color': \"#ff00ff\",\n  'x': 227,\n  'y': 600,\n  'name': 'purple'\n}];\nfunction ping_server(c) {\n  console.log(\"ping\");\n  var message = new Paho.Message(('ping' + ',' + ped_id + \",\" + '0' + \",\" + '0' + ',' + '0' + ',' + placename).toString());\n  message.destinationName = sendtopic;\n  try {\n    c.send(message);\n  } catch (_unused) {\n    console.log(\"Failed to send message. Try refreshing?\");\n  }\n}\nvar ScatterPlot = function ScatterPlot(props) {\n  var gridSizeW = 100;\n  var gridSizeH = 100;\n  var leftbound = 0;\n  var upbound = 0;\n  var rightbound = 832;\n  var downbound = 832;\n  var bgimagepath = './assets/intersection_v4.jpg';\n  placename = \"W 120 at Amsterdam\";\n  var scale = (rightbound - leftbound) / props.width;\n  gridSizeH = gridSizeH / scale;\n  gridSizeW = gridSizeW / scale;\n  var height = parseInt((downbound - upbound) / scale);\n  var width = props.width;\n  var intervalsW = parseInt(width / gridSizeW);\n  var intervalsH = parseInt(height / gridSizeH);\n  return _jsx(ImageBackground, {\n    source: require(bgimagepath),\n    resizeMode: \"cover\",\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      height: height\n    },\n    imageStyle: {\n      opacity: 0.4\n    },\n    children: _jsxs(Svg, {\n      style: styles.graph,\n      children: [circles.map(function (circle, circleindex) {\n        return _jsx(Circle, {\n          stroke: circle['color'],\n          cx: circle['x'] / scale,\n          cy: circle['y'] / scale,\n          r: circlesrad\n        }, 'circle' + circleindex);\n      }), Array.from(Array(intervalsW + 1)).map(function (_, index) {\n        return _jsx(Line, {\n          x1: index * gridSizeW,\n          y1: 0,\n          x2: index * gridSizeW,\n          y2: height,\n          stroke: \"gray\",\n          strokeWidth: \"0.25\"\n        }, \"vertical-\" + index);\n      }), Array.from(Array(intervalsH + 1)).map(function (_, index) {\n        return _jsx(Line, {\n          x1: 0,\n          y1: index * gridSizeH,\n          x2: width,\n          y2: index * gridSizeH,\n          stroke: \"gray\",\n          strokeWidth: \"0.25\"\n        }, \"horizontal-\" + index);\n      }), props.futuredata.map(function (vehicle, dataindex) {\n        return vehicle.map(function (point, index) {\n          return _jsx(Circle, {\n            cx: (point.x - leftbound) / scale,\n            cy: (point.y - upbound) / scale,\n            r: 1,\n            fill: point.color\n          }, index);\n        });\n      }), props.realtimedata.map(function (point, dataindex) {\n        return _jsx(Circle, {\n          cx: (point.x - leftbound) / scale,\n          cy: (point.y - upbound) / scale,\n          r: 3,\n          fill: point.color\n        }, dataindex);\n      })]\n    })\n  });\n};\nvar isPlaying = false;\nvar App = function App() {\n  var _useState = useState(2),\n    _useState2 = _slicedToArray(_useState, 2),\n    good = _useState2[0],\n    setalive = _useState2[1];\n  var _useState3 = useState(Dimensions.get(\"window\").height),\n    _useState4 = _slicedToArray(_useState3, 2),\n    graphWidth = _useState4[0],\n    changeGraphWidth = _useState4[1];\n  var _useState5 = useState(Dimensions.get(\"window\").height),\n    _useState6 = _slicedToArray(_useState5, 2),\n    graphHeight = _useState6[0],\n    changeGraphHeight = _useState6[1];\n  var _React$useState = React.useState(),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    sound = _React$useState2[0],\n    setSound = _React$useState2[1];\n  var _useState7 = useState({\n      timestamp: null,\n      coords: {\n        latitude: null,\n        longitude: null,\n        speed: null\n      }\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    location = _useState8[0],\n    setLocation = _useState8[1];\n  var _useState9 = useState(-1),\n    _useState10 = _slicedToArray(_useState9, 2),\n    xcoord = _useState10[0],\n    setxcoord = _useState10[1];\n  var _useState11 = useState(-1),\n    _useState12 = _slicedToArray(_useState11, 2),\n    ycoord = _useState12[0],\n    setycoord = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    errorMsg = _useState14[0],\n    setErrorMsg = _useState14[1];\n  var _useState15 = useState(-1),\n    _useState16 = _slicedToArray(_useState15, 2),\n    latency = _useState16[0],\n    setlatency = _useState16[1];\n  function playSound() {\n    return _playSound.apply(this, arguments);\n  }\n  function _playSound() {\n    _playSound = _asyncToGenerator(function* () {\n      if (isPlaying == false) {\n        console.log('Loading Sound');\n        var _yield$Audio$Sound$cr = yield Audio.Sound.createAsync(require(\"./assets/alarm.mp3\")),\n          _sound = _yield$Audio$Sound$cr.sound;\n        setSound(_sound);\n        console.log('Playing Sound');\n        yield _sound.playAsync();\n        isPlaying = true;\n      }\n    });\n    return _playSound.apply(this, arguments);\n  }\n  function stopSound() {\n    return _stopSound.apply(this, arguments);\n  }\n  function _stopSound() {\n    _stopSound = _asyncToGenerator(function* () {});\n    return _stopSound.apply(this, arguments);\n  }\n  function receive(msg) {\n    if (msg.destinationName === receivetopic) {\n      lasttimestamp = Date.now() / 1000;\n      var message = \"\";\n      try {\n        message = JSON.parse(msg.payloadString);\n      } catch (error) {\n        console.log(msg.payloadString);\n        console.error('Error parsing JSON:', error);\n      }\n      var nowtime = Date.now() / 1000;\n      console.log(message['status']);\n      if (message['status'] === \"bad\") {\n        Vibration.vibrate(vibration_pattern[Platform.OS]);\n        setalive(1);\n        aliveglobal = 1;\n        ttc = message['ttc'];\n        setlatency(nowtime - message['starttime']);\n        globallatency = nowtime - message['starttime'];\n      } else if (message['status'] === \"good\") {\n        Vibration.cancel();\n        setalive(0);\n        aliveglobal = 0;\n        setlatency(Date.now() / 1000 - message['starttime']);\n        globallatency = Date.now() / 1000 - message['starttime'];\n      } else if (message['status'] === 'info') {\n        warningreceivedtime = nowtime;\n        futureData = [];\n        realtimeData = [];\n        message['future']['ped'].forEach(function (_, ind) {\n          futureData.push(message['future']['ped'][ind]);\n        });\n        message['future']['veh'].forEach(function (_, ind) {\n          futureData.push(message['future']['veh'][ind]);\n        });\n        message['realtime']['ped'].forEach(function (_, ind) {\n          realtimeData.push(message['realtime']['ped'][ind]);\n        });\n        message['realtime']['veh'].forEach(function (_, ind) {\n          realtimeData.push(message['realtime']['veh'][ind]);\n        });\n        setxcoord(message['you']['x']);\n        setycoord(message['you']['y']);\n        if (message['you']['x'] === -2) {\n          setalive(4);\n        }\n        if (aliveglobal === 2 || aliveglobal === 3) {\n          setalive(4);\n          aliveglobal = 4;\n        }\n        ping_server(client);\n      }\n    }\n  }\n  useEffect(function () {\n    client = new Paho.Client(\"broker.hivemq.com\", Number(8000), \"python-mqtt-\" + ped_id);\n    client.connect({\n      onSuccess: function onSuccess() {\n        console.log(\"Connected!\");\n        client.subscribe(receivetopic);\n        client.onMessageArrived = receive;\n      },\n      onFailure: function onFailure() {\n        console.log(\"Failed to connect!\");\n        setalive(3);\n        aliveglobal = 3;\n      }\n    });\n    _asyncToGenerator(function* () {\n      var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n        status = _yield$Location$reque.status;\n      if (status !== 'granted') {\n        setErrorMsg('Permission to access location was denied');\n        return;\n      }\n      var initialLocation = yield Location.getCurrentPositionAsync({\n        enableHighAccuracy: true\n      });\n      setLocation(initialLocation);\n      templocation = initialLocation;\n      var intervalId = setInterval(_asyncToGenerator(function* () {\n        var updatedLocation = yield Location.getCurrentPositionAsync({});\n        setLocation(updatedLocation);\n        templocation = updatedLocation;\n      }), coords_interval_ms);\n      return function () {\n        clearInterval(intervalId);\n      };\n    })();\n    var interval = setInterval(function () {\n      var curtime = Date.now() / 1000;\n      if (lasttimestamp != 0 && curtime - lasttimestamp >= 10) {\n        setalive(3);\n        aliveglobal = 3;\n      }\n    }, coords_interval_ms);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  function send_tracking(c, pedx, pedy) {\n    var message = new Paho.Message(('tracking' + ',' + ped_id + \",\" + pedx + \",\" + pedy + ',' + '0' + ',' + placename).toString());\n    message.destinationName = sendtopic;\n    try {\n      c.send(message);\n    } catch (_unused2) {\n      console.log(\"Failed to send message. Try refreshing?\");\n    }\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: {\n        height: '15%',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsx(Text, {\n        style: {\n          color: alive_chart[good]['color'],\n          fontSize: 50\n        },\n        children: alive_chart[good]['text']\n      })\n    }), _jsxs(View, {\n      style: {\n        height: '40%',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      onLayout: function onLayout(event) {\n        var _event$nativeEvent$la = event.nativeEvent.layout,\n          x = _event$nativeEvent$la.x,\n          y = _event$nativeEvent$la.y,\n          width = _event$nativeEvent$la.width,\n          height = _event$nativeEvent$la.height;\n        changeGraphHeight(height);\n        changeGraphWidth(width);\n      },\n      children: [_jsx(Text, {\n        children: \"Real Time Graph of Trajectories\"\n      }), _jsx(ScatterPlot, {\n        gridSize: 10,\n        futuredata: futureData,\n        realtimedata: realtimeData,\n        width: graphWidth,\n        height: graphHeight\n      })]\n    }), _jsx(View, {\n      style: {\n        height: '20%',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: circles.map(function (circle, circleindex) {\n        return _jsx(Pressable, {\n          style: {\n            backgroundColor: '#ddddee',\n            padding: 10,\n            margin: 5\n          },\n          onPressOut: function onPressOut() {\n            return send_tracking(client, circle['x'], circle['y']);\n          },\n          children: _jsxs(Text, {\n            style: {\n              color: circle['color']\n            },\n            children: [\"I'm at the \", circle.name, \" circle! \"]\n          })\n        }, 'button' + circleindex);\n      })\n    }), _jsx(View, {\n      style: {\n        height: '10%',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }\n    }), _jsx(View, {\n      style: {\n        height: '5%',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsxs(Text, {\n        children: [\"Your (X, Y): (\", xcoord, \", \", ycoord, \") \", '\\n', \"Latency: \", latency]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  graph: {\n    flex: 1,\n    width: 300\n  },\n  image: {\n    flex: 1,\n    justifyContent: 'center',\n    width: 300\n  },\n  circlebutton: {\n    backgroundColor: 'blue',\n    padding: 10\n  }\n});\nexport default App;","map":{"version":3,"names":["Paho","useState","useEffect","React","StyleSheet","Text","View","Vibration","Platform","Dimensions","ImageBackground","Pressable","Button","Svg","Circle","Line","Audio","Location","jsx","_jsx","jsxs","_jsxs","client","ped_id","parseInt","Math","random","futureData","realtimeData","templocation","timestamp","coords","latitude","longitude","speed","lasttimestamp","placename","aliveglobal","ttc","warningreceivedtime","globallatency","coords_interval_ms","receivetopic","sendtopic","vibration_pattern","alive_chart","text","color","circlesrad","circles","ping_server","c","console","log","message","Message","toString","destinationName","send","_unused","ScatterPlot","props","gridSizeW","gridSizeH","leftbound","upbound","rightbound","downbound","bgimagepath","scale","width","height","intervalsW","intervalsH","source","require","resizeMode","style","flex","justifyContent","imageStyle","opacity","children","styles","graph","map","circle","circleindex","stroke","cx","cy","r","Array","from","_","index","x1","y1","x2","y2","strokeWidth","futuredata","vehicle","dataindex","point","x","y","fill","realtimedata","isPlaying","App","_useState","_useState2","_slicedToArray","good","setalive","_useState3","get","_useState4","graphWidth","changeGraphWidth","_useState5","_useState6","graphHeight","changeGraphHeight","_React$useState","_React$useState2","sound","setSound","_useState7","_useState8","location","setLocation","_useState9","_useState10","xcoord","setxcoord","_useState11","_useState12","ycoord","setycoord","_useState13","_useState14","errorMsg","setErrorMsg","_useState15","_useState16","latency","setlatency","playSound","_playSound","apply","arguments","_asyncToGenerator","_yield$Audio$Sound$cr","Sound","createAsync","playAsync","stopSound","_stopSound","receive","msg","Date","now","JSON","parse","payloadString","error","nowtime","vibrate","OS","cancel","forEach","ind","push","Client","Number","connect","onSuccess","subscribe","onMessageArrived","onFailure","_yield$Location$reque","requestForegroundPermissionsAsync","status","initialLocation","getCurrentPositionAsync","enableHighAccuracy","intervalId","setInterval","updatedLocation","clearInterval","interval","curtime","send_tracking","pedx","pedy","_unused2","container","alignItems","fontSize","onLayout","event","_event$nativeEvent$la","nativeEvent","layout","gridSize","backgroundColor","padding","margin","onPressOut","name","create","image","circlebutton"],"sources":["/Users/markivanantha/Documents/Columbia Project/App/PedAppV1/App.js"],"sourcesContent":["// Vikram Anantha\n// Columbia Summer Internship 2023\n// Mentored under Prof Sharon Di, Yongjie Fu\n\n// This is Version 2 of the Pedestrian App\n\n// Latencies (Tested where server.py was on Wifi Network, App.js same network, phone on cellular):\n// Coords Sent -> Processed Warning Message: 0.34 seconds\n// Coords Sent -> Process Diagram Info: 0.52 seconds\n\nimport Paho from \"paho-mqtt\";\n\nimport { useState, useEffect } from \"react\";\nimport * as React from \"react\";\nimport { StyleSheet, Text, View, Vibration, Platform, Dimensions, ImageBackground, Pressable, Button } from 'react-native';\nimport { Svg, Circle, Line } from 'react-native-svg';\nimport { Audio } from 'expo-av';\nimport * as Location from 'expo-location';\n\n// Don't touch these //\nvar client;\nvar ped_id = parseInt(Math.random() * 100);\nvar futureData = []\nvar realtimeData = []\nvar templocation = {\n  timestamp: null,\n  coords: {\n    latitude: null,\n    longitude: null,\n    speed: null\n  }\n};\nvar lasttimestamp = 0\nvar placename = \"\"\nvar aliveglobal = 2\nvar ttc = -1\nvar warningreceivedtime = -1\nvar globallatency = -1\n\n// Change these //\n\n\nconst coords_interval_ms = 5000\nconst receivetopic = \"vikram/columbia/summer2023/fromserver/\" + ped_id\nconst sendtopic = \"vikram/columbia/summer2023/toserver\"\n\n\nconst vibration_pattern = {\n  'android': [\n    0, 500, 250, 250, 250 // wait 0s, vibrate .5s, wait .25s, vibrate .25s, wait .25s\n  ],\n  'ios': [\n    0, 250 // wait 0s, vibrate, wait .25s\n  ]\n}\nconst alive_chart = {\n  0: {\n    text: \"So far so good\",\n    color: \"#47c906\"\n  },\n  1: {\n    text: \"DANGER \" + ttc + \" UNTIL COLLISION\",\n    color: \"#c90606\"\n  },\n  2: {\n    text: \"Connecting to Server\",\n    color: \"#ffd012\"\n  },\n  3: {\n    text: \"No Server Connection\",\n    color: \"#033dfc\"\n  },\n  4: {\n    text: \"Connected to Server\",\n    color: \"#dbd21a\"\n  },\n}\n\nvar circlesrad = 7\nconst circles = [\n  {\n    'color': \"#0000ff\",\n    'x': 600,\n    'y': 736,\n    'name': 'blue'\n  },\n  {\n    'color': \"#ff0000\",\n    'x': 107,\n    'y': 272,\n    'name': 'red'\n  },\n  {\n    'color': \"#12a630\",\n    'x': 728,\n    'y': 300,\n    'name': 'green'\n  },\n  {\n    'color': \"#ff00ff\",\n    'x': 227,\n    'y': 600,\n    'name': 'purple'\n  },\n]\n\nfunction ping_server (c) {\n  // format: msgtype, ped_id_mqtt, lat, long, times, place\n  console.log(\"ping\")\n  const message = new Paho.Message((\n    'ping' + ',' + \n    ped_id + \",\" + \n    '0' + \",\" + \n    '0' + ',' +\n    '0' + ',' +\n    // Date.now()/1000 + ',' + \n    // globallatency + ',' +\n    placename\n  ).toString());\n  message.destinationName = sendtopic;\n  try {\n    c.send(message);\n  } catch {\n    console.log(\"Failed to send message. Try refreshing?\")\n  }\n}\n\nconst ScatterPlot = props => {\n  \n  var gridSizeW = 100;\n  var gridSizeH = 100;\n\n  const leftbound = 0\n  const upbound = 0\n  const rightbound = 832\n  const downbound = 832\n  var bgimagepath = './assets/intersection_v4.jpg';\n  placename = \"W 120 at Amsterdam\"\n\n  // const leftbound = 0\n  // const upbound = 0\n  // const rightbound = 1284\n  // const downbound = 1386\n  // var bgimagepath = './assets/columbia_lawn_v1.png';\n  // var placename = \"Columbia University Lawn\"\n\n\n  const scale = (rightbound-leftbound) / props.width\n  gridSizeH = gridSizeH / scale;\n  gridSizeW = gridSizeW / scale;\n  const height = parseInt((downbound - upbound) / scale)\n  const width = props.width\n  // console.log(width, height, scale)\n  const intervalsW = parseInt(width / gridSizeW);\n  const intervalsH = parseInt(height / gridSizeH);\n\n  return (\n    <ImageBackground \n    source={require(bgimagepath)} \n    resizeMode=\"cover\" \n    style={{flex: 1,\n      justifyContent: 'center',\n      // width:parseInt(width),\n      height:height\n      }}\n    imageStyle={{opacity:0.4}}>\n      <Svg style={styles.graph}>\n\n\n\n        {circles.map((circle, circleindex) => (\n          <Circle\n            stroke={circle['color']}\n            cx={circle['x'] / scale}\n            cy={circle['y'] / scale}\n            r={circlesrad}\n            key={'circle' + circleindex}\n            />\n          \n        ))}\n        \n\n        {Array.from(Array(intervalsW+1)).map((_, index) => (\n          <Line\n            key={`vertical-${index}`}\n            x1={index * gridSizeW}\n            y1={0}\n            x2={index * gridSizeW}\n            y2={height} // Adjust this based on your desired graph height\n            stroke=\"gray\"\n            strokeWidth=\"0.25\"\n          />\n        ))}\n\n\n        {Array.from(Array(intervalsH+1)).map((_, index) => (\n          <Line\n            key={`horizontal-${index}`}\n            x1={0}\n            y1={index * gridSizeH}\n            x2={width} // Adjust this based on your desired graph width\n            y2={index * gridSizeH}\n            stroke=\"gray\"\n            strokeWidth=\"0.25\"\n          />\n        ))}\n\n\n        {props.futuredata.map((vehicle, dataindex) => (\n          vehicle.map((point, index) => (\n            <Circle\n            key={index}\n            cx={(point.x - leftbound) / scale}\n            cy={(point.y - upbound) / scale}\n            r={1}\n            fill={point.color}\n          />\n          ))\n          \n        ))}\n\n        {props.realtimedata.map((point, dataindex) => (\n          <Circle\n          key={dataindex}\n          cx={(point.x - leftbound) / scale}\n          cy={(point.y - upbound) / scale}\n          r={3}\n          fill={point.color}\n        />\n        \n\n        ))}\n\n        \n      </Svg>\n      {/* {console.log(Date.now()/1000 - warningreceivedtime)} */}\n      {/* {ping_server(client)} */}\n      {/* {console.log(\"Rendered\")} */}\n\n    </ImageBackground>\n  );\n}\n\nvar isPlaying = false;\n\nconst App = () => {\n\n  const [good, setalive] = useState(2);\n\n  const [graphWidth, changeGraphWidth] = useState(Dimensions.get(\"window\").height)\n  const [graphHeight, changeGraphHeight] = useState(Dimensions.get(\"window\").height)\n\n  const [sound, setSound] = React.useState();\n  // var sound = React.useRef(new Audio.Sound());\n  // const [isPlaying, setIsPlaying] = useState(false);\n\n  const [location, setLocation] = useState({\n    timestamp: null,\n    coords: {\n      latitude: null,\n      longitude: null,\n      speed: null\n    }\n  });\n  const [xcoord, setxcoord] = useState(-1)\n  // const [trafficstatus, changetrafficstatus] = useState(\"\")\n  // const [traffictime, changetraffictime] = useState(-1)\n  const [ycoord, setycoord] = useState(-1)\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [latency, setlatency] = useState(-1);\n  // const [ttc, setttc] = useState(-1);\n\n  async function playSound() {\n    if (isPlaying == false) {\n      console.log('Loading Sound');\n      const {sound} = await Audio.Sound.createAsync( require('./assets/alarm.mp3') );\n      setSound(sound);\n      // sound = _sound\n\n      console.log('Playing Sound');\n      await sound.playAsync();\n      // setIsPlaying(true);\n      isPlaying = true\n    }\n  }\n  async function stopSound() {\n    // console.log(sound)\n    // console.log(isPlaying)\n    // if (isPlaying) {\n    //   await sound.unloadAsync()\n    // }\n    // isPlaying = false\n  }\n\n\n\n  function receive(msg) { \n    if (msg.destinationName === receivetopic) {\n    lasttimestamp = Date.now()/1000\n    var message = \"\";\n    try {\n      // Parse the JSON string into a JavaScript object\n      message = JSON.parse(msg.payloadString);\n    } catch (error) {\n      console.log(msg.payloadString)\n      console.error('Error parsing JSON:', error);\n    }\n    // console.log(message)\n    var nowtime = Date.now()/1000\n    console.log(message['status'])\n    if (message['status'] === \"bad\") {\n      Vibration.vibrate(vibration_pattern[Platform.OS])      \n      // console.log(\"BAD\")\n      setalive(1)\n      aliveglobal = 1\n      ttc = message['ttc']\n      // playSound()\n      setlatency(nowtime - message['starttime'])\n      globallatency = nowtime - message['starttime']\n      // warningreceivedtime = nowtime\n    }\n    else if (message['status'] === \"good\") {\n      Vibration.cancel()\n      // console.log(\"GOOD\")\n      setalive(0)\n      aliveglobal = 0\n      // stopSound()\n      setlatency(Date.now()/1000 - message['starttime'])\n      globallatency = (Date.now()/1000 - message['starttime'])\n      // warningreceivedtime = nowtime\n    }\n    else if (message['status'] === 'info') {\n      warningreceivedtime = nowtime\n      futureData = []\n      realtimeData = []\n      message['future']['ped'].forEach((_, ind) => {\n        futureData.push(message['future']['ped'][ind])\n      })\n      message['future']['veh'].forEach((_, ind) => {\n        futureData.push(message['future']['veh'][ind])\n      })\n      message['realtime']['ped'].forEach((_, ind) => {\n        realtimeData.push(message['realtime']['ped'][ind])\n      })\n      message['realtime']['veh'].forEach((_, ind) => {\n        realtimeData.push(message['realtime']['veh'][ind])\n      })\n\n      setxcoord(message['you']['x'])\n      setycoord(message['you']['y'])\n\n      // changetrafficstatus(message['traffic']['status'])\n      // changetraffictime(message['traffic']['timeleft'])\n\n      // console.log(Date.now()/1000 - message['starttime'])\n\n      if (message['you']['x'] === -2) {\n        setalive(4)\n      }\n\n      if (aliveglobal === 2 || aliveglobal === 3) {\n        setalive(4)\n        aliveglobal = 4\n      }\n\n      ping_server(client)\n    }\n    // if (message['strange'] == 1) {\n    //   console.log(Date.now()/1000 - testingTime)\n    // }\n  }}\n\n  useEffect(() => {\n    client = new Paho.Client(\n      \"broker.hivemq.com\",\n      Number(8000),\n      `python-mqtt-${ped_id}`\n    );\n    client.connect( \n      {\n        onSuccess: () => { \n        console.log(\"Connected!\");\n        client.subscribe(receivetopic);\n        client.onMessageArrived = receive;\n      },\n      onFailure: () => {\n        console.log(\"Failed to connect!\"); \n        setalive(3)\n        aliveglobal = 3\n      }\n      }\n    );\n    (async () => {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        setErrorMsg('Permission to access location was denied');\n        return;\n      }\n\n      // Get the initial location\n      let initialLocation = await Location.getCurrentPositionAsync({\n        // accuracy: Accuracy.High,\n        enableHighAccuracy: true\n      });\n      setLocation(initialLocation);\n      // console.log(initialLocation)\n      templocation = initialLocation\n\n\n      const intervalId = setInterval(async () => {\n        let updatedLocation = await Location.getCurrentPositionAsync({});\n        setLocation(updatedLocation);\n        templocation = updatedLocation\n        // console.log(templocation.timestamp + \", a\")\n        // console.log(templocation.coords.speed + \", d\")\n        // updatedLocation.remove();\n\n      }, coords_interval_ms);\n\n      return () => {\n        clearInterval(intervalId);\n      };\n\n      // const locationListener = await Location.watchPositionAsync(\n      //   { timeInterval: coords_interval_ms },\n      //   (newLocation) => {\n      //     setLocation(newLocation);\n      //     templocation = newLocation\n      //     console.log(templocation.timestamp + \", b\")\n      //     console.log(templocation.coords.speed + \", c\")\n      //     locationListener.remove();\n      //   }\n      // );\n\n      // return () => {\n      //   if (locationListener) {\n      //     locationListener.remove();\n      //   }\n      // };\n\n      \n    })();\n    const interval = setInterval(() => {\n      var curtime = Date.now()/1000\n\n      // ping_server(client)\n\n      if (lasttimestamp != 0 && curtime - lasttimestamp >= 10) {\n        setalive(3)\n        aliveglobal = 3\n      }\n      \n\n    }, coords_interval_ms);\n    return () => clearInterval(interval);\n  }, [])\n\n  function send_tracking(c, pedx, pedy) {\n    // console.log(\"Sending\")\n    const message = new Paho.Message((\n      'tracking' + ',' + \n      ped_id + \",\" + \n      pedx + \",\" + \n      pedy + ',' +\n      '0' + ',' + \n      placename\n    ).toString());\n    message.destinationName = sendtopic;\n    try {\n      c.send(message);\n    } catch {\n      console.log(\"Failed to send message. Try refreshing?\")\n    }\n\n  }\n\n\n  return (\n    <View style={styles.container}>\n      <View style={{height: '15%', alignItems: 'center', justifyContent: 'center',}}>\n        <Text style={{color: alive_chart[good]['color'], fontSize: 50}}>\n          {alive_chart[good]['text']}\n        </Text>\n      </View>\n      <View style={{height: '40%', alignItems: 'center', justifyContent: 'center'}} onLayout={(event) => {\n      var {x, y, width, height} = event.nativeEvent.layout;\n      changeGraphHeight(height)\n      changeGraphWidth(width)}}>\n        <Text>Real Time Graph of Trajectories</Text>\n        <ScatterPlot \n          gridSize={10}\n          futuredata={futureData}\n          realtimedata={realtimeData}\n          width={graphWidth}\n          height={graphHeight}\n        />\n        \n      </View>\n      <View style={{height: '20%', alignItems: 'center', justifyContent: 'center',}}>\n        {circles.map((circle, circleindex) => (\n          <Pressable\n            key = {'button' + circleindex}\n            style={{\n              backgroundColor: '#ddddee',\n              padding: 10,\n              margin: 5\n            }}\n            onPressOut={() => send_tracking(client, circle['x'], circle['y'])}\n            >\n            <Text style={{\n              color: circle['color'],\n            }}>I'm at the {circle.name} circle! </Text>\n          </Pressable>\n\n          \n        ))}\n      </View>\n\n      <View style={{height: '10%', alignItems: 'center', justifyContent: 'center',}}>\n        {/* <Text>{trafficstatus} light, {traffictime}s left</Text> */}\n      </View>\n\n\n      <View style={{height: '5%', alignItems: 'center', justifyContent: 'center',}}>\n        <Text>\n          Your (X, Y): ({xcoord}, {ycoord}) {'\\n'}\n          {/* Timestamp: {location.timestamp} */}\n          Latency: {latency}\n        </Text>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  graph: {\n    flex: 1,\n    width: 300,\n  },\n  image: {\n    flex: 1,\n    justifyContent: 'center',\n    width:300,\n  },\n  circlebutton: {\n    backgroundColor: 'blue',\n    padding: 10,\n  },\n});\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}