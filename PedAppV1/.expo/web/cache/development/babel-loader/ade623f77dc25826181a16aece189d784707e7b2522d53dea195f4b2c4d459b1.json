{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Paho from \"paho-mqtt\";\nimport { useState, useEffect } from \"react\";\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Svg, Circle, Line } from 'react-native-svg';\nimport { Audio } from 'expo-av';\nimport * as Location from 'expo-location';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar client;\nvar ped_id = parseInt(Math.random() * 100);\nvar futureData = [];\nvar realtimeData = [];\nvar templocation = {\n  timestamp: null,\n  coords: {\n    latitude: null,\n    longitude: null,\n    speed: null\n  }\n};\nvar lasttimestamp = 0;\nvar placename = \"\";\nvar coords_interval_ms = 100;\nvar receivetopic = \"vikram/columbia/summer2023/fromserver/\" + ped_id;\nvar sendtopic = \"vikram/columbia/summer2023/toserver\";\nvar vibration_pattern = {\n  'android': [0, 500, 250, 250, 250],\n  'ios': [0, 250]\n};\nvar alive_chart = {\n  0: {\n    text: \"So far so good\",\n    color: \"#47c906\"\n  },\n  1: {\n    text: \"DANGER DANGER COLLISION INCOMING\",\n    color: \"#c90606\"\n  },\n  2: {\n    text: \"Connecting to Server\",\n    color: \"#ffd012\"\n  },\n  3: {\n    text: \"No Server Connection\",\n    color: \"#033dfc\"\n  }\n};\nvar circlesrad = 10;\nvar ScatterPlot = function ScatterPlot(props) {\n  var standingcircles = [{\n    'color': \"#0000ff\",\n    'x': 600,\n    'y': 736\n  }];\n  var gridSizeW = 100;\n  var gridSizeH = 100;\n  var leftbound = 0;\n  var upbound = 0;\n  var rightbound = 832;\n  var downbound = 832;\n  var bgimagepath = './assets/intersection_v4.jpg';\n  placename = \"W 120 at Amsterdam\";\n  var scale = (rightbound - leftbound) / props.width;\n  gridSizeH = gridSizeH / scale;\n  gridSizeW = gridSizeW / scale;\n  var height = parseInt((downbound - upbound) / scale);\n  var width = props.width;\n  var intervalsW = parseInt(width / gridSizeW);\n  var intervalsH = parseInt(height / gridSizeH);\n  return _jsx(ImageBackground, {\n    source: require(\"./assets/intersection_v4.jpg\"),\n    resizeMode: \"cover\",\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      height: height\n    },\n    imageStyle: {\n      opacity: 0.4\n    },\n    children: _jsxs(Svg, {\n      style: styles.graph,\n      children: [Array.from(Array(intervalsW + 1)).map(function (_, index) {\n        return _jsx(Line, {\n          x1: index * gridSizeW,\n          y1: 0,\n          x2: index * gridSizeW,\n          y2: height,\n          stroke: \"gray\",\n          strokeWidth: \"0.25\"\n        }, \"vertical-\" + index);\n      }), Array.from(Array(intervalsH + 1)).map(function (_, index) {\n        return _jsx(Line, {\n          x1: 0,\n          y1: index * gridSizeH,\n          x2: width,\n          y2: index * gridSizeH,\n          stroke: \"gray\",\n          strokeWidth: \"0.25\"\n        }, \"horizontal-\" + index);\n      }), props.futuredata.map(function (vehicle, dataindex) {\n        return vehicle.map(function (point, index) {\n          return _jsx(Circle, {\n            cx: (point.x - leftbound) / scale,\n            cy: (point.y - upbound) / scale,\n            r: 1,\n            fill: point.color\n          }, index);\n        });\n      }), props.realtimedata.map(function (point, dataindex) {\n        return _jsx(Circle, {\n          cx: (point.x - leftbound) / scale,\n          cy: (point.y - upbound) / scale,\n          r: 3,\n          fill: point.color\n        }, dataindex);\n      }), standingcircles.map(function (circle, circleindex) {\n        return _jsx(Circle, {\n          fill: 'blue',\n          cx: 500,\n          cy: 500,\n          r: 50\n        }, 'circle');\n      })]\n    })\n  });\n};\nvar isPlaying = false;\nvar App = function App() {\n  var _useState = useState(2),\n    _useState2 = _slicedToArray(_useState, 2),\n    good = _useState2[0],\n    setalive = _useState2[1];\n  var _useState3 = useState(400),\n    _useState4 = _slicedToArray(_useState3, 2),\n    coordsx = _useState4[0],\n    updateCoordsX = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    coordsy = _useState6[0],\n    updateCoordsY = _useState6[1];\n  var _useState7 = useState(Dimensions.get(\"window\").height),\n    _useState8 = _slicedToArray(_useState7, 2),\n    graphWidth = _useState8[0],\n    changeGraphWidth = _useState8[1];\n  var _useState9 = useState(Dimensions.get(\"window\").height),\n    _useState10 = _slicedToArray(_useState9, 2),\n    graphHeight = _useState10[0],\n    changeGraphHeight = _useState10[1];\n  var _React$useState = React.useState(),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    sound = _React$useState2[0],\n    setSound = _React$useState2[1];\n  var _useState11 = useState({\n      timestamp: null,\n      coords: {\n        latitude: null,\n        longitude: null,\n        speed: null\n      }\n    }),\n    _useState12 = _slicedToArray(_useState11, 2),\n    location = _useState12[0],\n    setLocation = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    errorMsg = _useState14[0],\n    setErrorMsg = _useState14[1];\n  function playSound() {\n    return _playSound.apply(this, arguments);\n  }\n  function _playSound() {\n    _playSound = _asyncToGenerator(function* () {\n      if (isPlaying == false) {\n        console.log('Loading Sound');\n        var _yield$Audio$Sound$cr = yield Audio.Sound.createAsync(require(\"./assets/alarm.mp3\")),\n          _sound = _yield$Audio$Sound$cr.sound;\n        setSound(_sound);\n        console.log('Playing Sound');\n        yield _sound.playAsync();\n        isPlaying = true;\n      }\n    });\n    return _playSound.apply(this, arguments);\n  }\n  function stopSound() {\n    return _stopSound.apply(this, arguments);\n  }\n  function _stopSound() {\n    _stopSound = _asyncToGenerator(function* () {});\n    return _stopSound.apply(this, arguments);\n  }\n  function receive(msg) {\n    if (msg.destinationName === receivetopic) {\n      lasttimestamp = Date.now() / 1000;\n      var message = \"\";\n      try {\n        message = JSON.parse(msg.payloadString);\n      } catch (error) {\n        console.log(msg.payloadString);\n        console.error('Error parsing JSON:', error);\n      }\n      if (message['status'] === \"bad\") {\n        Vibration.vibrate(vibration_pattern[Platform.OS]);\n        setalive(1);\n        playSound();\n      } else if (message['status'] === \"good\") {\n        Vibration.cancel();\n        setalive(0);\n        stopSound();\n      } else if (message['status'] === 'info') {\n        futureData = [];\n        realtimeData = [];\n        message['future']['ped'].forEach(function (_, ind) {\n          futureData.push(message['future']['ped'][ind]);\n        });\n        message['future']['veh'].forEach(function (_, ind) {\n          futureData.push(message['future']['veh'][ind]);\n        });\n        message['realtime']['ped'].forEach(function (_, ind) {\n          realtimeData.push(message['realtime']['ped'][ind]);\n        });\n        message['realtime']['veh'].forEach(function (_, ind) {\n          realtimeData.push(message['realtime']['veh'][ind]);\n        });\n      }\n    }\n  }\n  useEffect(function () {\n    client = new Paho.Client(\"broker.hivemq.com\", Number(8000), \"python-mqtt-\" + ped_id);\n    client.connect({\n      onSuccess: function onSuccess() {\n        console.log(\"Connected!\");\n        client.subscribe(receivetopic);\n        client.onMessageArrived = receive;\n      },\n      onFailure: function onFailure() {\n        console.log(\"Failed to connect!\");\n        setalive(3);\n      }\n    });\n    _asyncToGenerator(function* () {\n      var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n        status = _yield$Location$reque.status;\n      if (status !== 'granted') {\n        setErrorMsg('Permission to access location was denied');\n        return;\n      }\n      var initialLocation = yield Location.getCurrentPositionAsync({\n        enableHighAccuracy: true\n      });\n      setLocation(initialLocation);\n      templocation = initialLocation;\n      var intervalId = setInterval(_asyncToGenerator(function* () {\n        var updatedLocation = yield Location.getCurrentPositionAsync({});\n        setLocation(updatedLocation);\n        templocation = updatedLocation;\n      }), coords_interval_ms);\n      return function () {\n        clearInterval(intervalId);\n      };\n    })();\n    var interval = setInterval(function () {\n      var curtime = Date.now() / 1000;\n      try {\n        send_coords_latlong(client, templocation.coords.latitude, templocation.coords.longitude, curtime, placename);\n      } catch (_unused) {\n        console.log(\"Location hasn't been allowed yet\");\n      }\n      if (lasttimestamp != 0 && curtime - lasttimestamp >= 10) {\n        setalive(3);\n      }\n    }, coords_interval_ms);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  function send_coords(c, coordsx, coordsy, time) {\n    var message = new Paho.Message((ped_id + \",\" + coordsx + \",\" + coordsy + ',' + time).toString());\n    message.destinationName = sendtopic;\n    try {\n      c.send(message);\n    } catch (_unused2) {\n      console.log(\"Failed to send message. Try refreshing?\");\n    }\n  }\n  function send_coords_latlong(c, lat, long, time, place) {\n    var message = new Paho.Message((ped_id + \",\" + lat + \",\" + long + \",\" + time + \",\" + place).toString());\n    message.destinationName = sendtopic;\n    try {\n      c.send(message);\n    } catch (_unused3) {\n      console.log(\"Failed to send message. Try refreshing?\");\n    }\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: {\n        height: '40%',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsx(Text, {\n        style: {\n          color: alive_chart[good]['color'],\n          fontSize: 50\n        },\n        children: alive_chart[good]['text']\n      })\n    }), _jsxs(View, {\n      style: {\n        height: '50%',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      onLayout: function onLayout(event) {\n        var _event$nativeEvent$la = event.nativeEvent.layout,\n          x = _event$nativeEvent$la.x,\n          y = _event$nativeEvent$la.y,\n          width = _event$nativeEvent$la.width,\n          height = _event$nativeEvent$la.height;\n        changeGraphHeight(height);\n        changeGraphWidth(width);\n      },\n      children: [_jsx(ScatterPlot, {\n        gridSize: 10,\n        futuredata: futureData,\n        realtimedata: realtimeData,\n        width: graphWidth,\n        height: graphHeight\n      }), _jsx(Text, {\n        children: \"Real Time Graph of Trajectories\"\n      })]\n    }), _jsx(View, {\n      style: {\n        height: '10%',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: _jsxs(Text, {\n        children: [\"Your Coords: (\", location.coords.latitude, \", \", location.coords.longitude, \") \", '\\n', \"Timestamp: \", location.timestamp]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  graph: {\n    flex: 1,\n    width: 300\n  },\n  image: {\n    flex: 1,\n    justifyContent: 'center',\n    width: 300,\n    height: '61%'\n  }\n});\nexport default App;","map":{"version":3,"names":["Paho","useState","useEffect","React","StyleSheet","Text","View","Vibration","Platform","Dimensions","ImageBackground","Svg","Circle","Line","Audio","Location","jsx","_jsx","jsxs","_jsxs","client","ped_id","parseInt","Math","random","futureData","realtimeData","templocation","timestamp","coords","latitude","longitude","speed","lasttimestamp","placename","coords_interval_ms","receivetopic","sendtopic","vibration_pattern","alive_chart","text","color","circlesrad","ScatterPlot","props","standingcircles","gridSizeW","gridSizeH","leftbound","upbound","rightbound","downbound","bgimagepath","scale","width","height","intervalsW","intervalsH","source","require","resizeMode","style","flex","justifyContent","imageStyle","opacity","children","styles","graph","Array","from","map","_","index","x1","y1","x2","y2","stroke","strokeWidth","futuredata","vehicle","dataindex","point","cx","x","cy","y","r","fill","realtimedata","circle","circleindex","isPlaying","App","_useState","_useState2","_slicedToArray","good","setalive","_useState3","_useState4","coordsx","updateCoordsX","_useState5","_useState6","coordsy","updateCoordsY","_useState7","get","_useState8","graphWidth","changeGraphWidth","_useState9","_useState10","graphHeight","changeGraphHeight","_React$useState","_React$useState2","sound","setSound","_useState11","_useState12","location","setLocation","_useState13","_useState14","errorMsg","setErrorMsg","playSound","_playSound","apply","arguments","_asyncToGenerator","console","log","_yield$Audio$Sound$cr","Sound","createAsync","playAsync","stopSound","_stopSound","receive","msg","destinationName","Date","now","message","JSON","parse","payloadString","error","vibrate","OS","cancel","forEach","ind","push","Client","Number","connect","onSuccess","subscribe","onMessageArrived","onFailure","_yield$Location$reque","requestForegroundPermissionsAsync","status","initialLocation","getCurrentPositionAsync","enableHighAccuracy","intervalId","setInterval","updatedLocation","clearInterval","interval","curtime","send_coords_latlong","_unused","send_coords","c","time","Message","toString","send","_unused2","lat","long","place","_unused3","container","alignItems","fontSize","onLayout","event","_event$nativeEvent$la","nativeEvent","layout","gridSize","create","backgroundColor","image"],"sources":["/Users/markivanantha/Documents/Columbia Project/App/PedAppV1/App.js"],"sourcesContent":["// Vikram Anantha\n// Columbia Summer Internship 2023\n// Mentored under Prof Sharon Di, Yongjie Fu\n\n// This is Version 1 of the Pedestrian App\n\n// Latencies (Tested where server.py was on Wifi Network, App.js same network, phone on cellular):\n// Coords Sent -> Processed Warning Message: 0.34 seconds\n// Coords Sent -> Process Diagram Info: 0.52 seconds\n\nimport Paho from \"paho-mqtt\";\n\nimport { useState, useEffect } from \"react\";\nimport * as React from \"react\";\nimport { StyleSheet, Text, View, Vibration, Platform, Dimensions, ImageBackground } from 'react-native';\nimport { Svg, Circle, Line } from 'react-native-svg';\nimport { Audio } from 'expo-av';\nimport * as Location from 'expo-location';\n\n// Don't touch these //\nvar client;\nvar ped_id = parseInt(Math.random() * 100);\nvar futureData = []\nvar realtimeData = []\nvar templocation = {\n  timestamp: null,\n  coords: {\n    latitude: null,\n    longitude: null,\n    speed: null\n  }\n};\nvar lasttimestamp = 0\nvar placename = \"\"\n\n\n// Change these //\n\n\nconst coords_interval_ms = 100\nconst receivetopic = \"vikram/columbia/summer2023/fromserver/\" + ped_id\nconst sendtopic = \"vikram/columbia/summer2023/toserver\"\n\n\nconst vibration_pattern = {\n  'android': [\n    0, 500, 250, 250, 250 // wait 0s, vibrate .5s, wait .25s, vibrate .25s, wait .25s\n  ],\n  'ios': [\n    0, 250 // wait 0s, vibrate, wait .25s\n  ]\n}\nconst alive_chart = {\n  0: {\n    text: \"So far so good\",\n    color: \"#47c906\"\n  },\n  1: {\n    text: \"DANGER DANGER COLLISION INCOMING\",\n    color: \"#c90606\"\n  },\n  2: {\n    text: \"Connecting to Server\",\n    color: \"#ffd012\"\n  },\n  3: {\n    text: \"No Server Connection\",\n    color: \"#033dfc\"\n  },\n}\n\nvar circlesrad = 10\n\n\nconst ScatterPlot = props => {\n\n  const standingcircles = [\n    {\n      'color': \"#0000ff\",\n      'x': 600,\n      'y': 736\n    },\n  ]\n  \n  var gridSizeW = 100;\n  var gridSizeH = 100;\n\n  const leftbound = 0\n  const upbound = 0\n  const rightbound = 832\n  const downbound = 832\n  var bgimagepath = './assets/intersection_v4.jpg';\n  placename = \"W 120 at Amsterdam\"\n\n  // const leftbound = 0\n  // const upbound = 0\n  // const rightbound = 1284\n  // const downbound = 1386\n  // var bgimagepath = './assets/columbia_lawn_v1.png';\n  // var placename = \"Columbia University Lawn\"\n\n\n  const scale = (rightbound-leftbound) / props.width\n  gridSizeH = gridSizeH / scale;\n  gridSizeW = gridSizeW / scale;\n  const height = parseInt((downbound - upbound) / scale)\n  const width = props.width\n  // console.log(width, height, scale)\n  const intervalsW = parseInt(width / gridSizeW);\n  const intervalsH = parseInt(height / gridSizeH);\n  return (\n    <ImageBackground \n    source={require('./assets/intersection_v4.jpg')} \n    resizeMode=\"cover\" \n    style={{flex: 1,\n      justifyContent: 'center',\n      // width:parseInt(width),\n      height:height\n      }}\n    imageStyle={{opacity:0.4}}>\n      <Svg style={styles.graph}>\n        \n\n        {Array.from(Array(intervalsW+1)).map((_, index) => (\n          <Line\n            key={`vertical-${index}`}\n            x1={index * gridSizeW}\n            y1={0}\n            x2={index * gridSizeW}\n            y2={height} // Adjust this based on your desired graph height\n            stroke=\"gray\"\n            strokeWidth=\"0.25\"\n          />\n        ))}\n\n\n        {Array.from(Array(intervalsH+1)).map((_, index) => (\n          <Line\n            key={`horizontal-${index}`}\n            x1={0}\n            y1={index * gridSizeH}\n            x2={width} // Adjust this based on your desired graph width\n            y2={index * gridSizeH}\n            stroke=\"gray\"\n            strokeWidth=\"0.25\"\n          />\n        ))}\n\n\n        {props.futuredata.map((vehicle, dataindex) => (\n          vehicle.map((point, index) => (\n            <Circle\n            key={index}\n            cx={(point.x - leftbound) / scale}\n            cy={(point.y - upbound) / scale}\n            r={1}\n            fill={point.color}\n          />\n          ))\n          \n        ))}\n\n        {props.realtimedata.map((point, dataindex) => (\n          <Circle\n          key={dataindex}\n          cx={(point.x - leftbound) / scale}\n          cy={(point.y - upbound) / scale}\n          r={3}\n          fill={point.color}\n        />\n        \n        ))}\n\n        {standingcircles.map((circle, circleindex) => (\n          <Circle\n          key={'circle'}\n          fill={'blue'}\n          cx={500}\n          cy={500}\n          r={50}\n        />\n          \n        ))}\n      </Svg>\n    </ImageBackground>\n  );\n}\n\nvar isPlaying = false;\n\nconst App = () => {\n\n  const [good, setalive] = useState(2);\n  const [coordsx, updateCoordsX] = useState(400)\n  const [coordsy, updateCoordsY] = useState(0)\n\n  const [graphWidth, changeGraphWidth] = useState(Dimensions.get(\"window\").height)\n  const [graphHeight, changeGraphHeight] = useState(Dimensions.get(\"window\").height)\n\n  const [sound, setSound] = React.useState();\n  // var sound = React.useRef(new Audio.Sound());\n  // const [isPlaying, setIsPlaying] = useState(false);\n\n  const [location, setLocation] = useState({\n    timestamp: null,\n    coords: {\n      latitude: null,\n      longitude: null,\n      speed: null\n    }\n  });\n  const [errorMsg, setErrorMsg] = useState(null);\n\n  async function playSound() {\n    if (isPlaying == false) {\n      console.log('Loading Sound');\n      const {sound} = await Audio.Sound.createAsync( require('./assets/alarm.mp3') );\n      setSound(sound);\n      // sound = _sound\n\n      console.log('Playing Sound');\n      await sound.playAsync();\n      // setIsPlaying(true);\n      isPlaying = true\n    }\n  }\n  async function stopSound() {\n    // console.log(sound)\n    // console.log(isPlaying)\n    // if (isPlaying) {\n    //   await sound.unloadAsync()\n    // }\n    // isPlaying = false\n  }\n\n\n\n  function receive(msg) { \n    if (msg.destinationName === receivetopic) {\n    lasttimestamp = Date.now()/1000\n    // console.log(msg)\n    var message = \"\";\n    try {\n      // Parse the JSON string into a JavaScript object\n      message = JSON.parse(msg.payloadString);\n    } catch (error) {\n      console.log(msg.payloadString)\n      console.error('Error parsing JSON:', error);\n    }\n    // console.log(message)\n    \n\n    if (message['status'] === \"bad\") {\n      Vibration.vibrate(vibration_pattern[Platform.OS])      \n      // console.log(\"BAD\")\n      setalive(1)\n      playSound()\n    }\n    else if (message['status'] === \"good\") {\n      Vibration.cancel()\n      // console.log(\"GOOD\")\n      setalive(0)\n      stopSound()\n    }\n    else if (message['status'] === 'info') {\n      futureData = []\n      realtimeData = []\n      message['future']['ped'].forEach((_, ind) => {\n        futureData.push(message['future']['ped'][ind])\n      })\n      message['future']['veh'].forEach((_, ind) => {\n        futureData.push(message['future']['veh'][ind])\n      })\n      message['realtime']['ped'].forEach((_, ind) => {\n        realtimeData.push(message['realtime']['ped'][ind])\n      })\n      message['realtime']['veh'].forEach((_, ind) => {\n        realtimeData.push(message['realtime']['veh'][ind])\n      })\n    }\n    // if (message['strange'] == 1) {\n    //   console.log(Date.now()/1000 - testingTime)\n    // }\n  }}\n\n  useEffect(() => {\n    client = new Paho.Client(\n      \"broker.hivemq.com\",\n      Number(8000),\n      `python-mqtt-${ped_id}`\n    );\n    client.connect( \n      {\n        onSuccess: () => { \n        console.log(\"Connected!\");\n        client.subscribe(receivetopic);\n        client.onMessageArrived = receive;\n      },\n      onFailure: () => {\n        console.log(\"Failed to connect!\"); \n        setalive(3)\n      }\n      }\n    );\n    (async () => {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        setErrorMsg('Permission to access location was denied');\n        return;\n      }\n\n      // Get the initial location\n      let initialLocation = await Location.getCurrentPositionAsync({\n        // accuracy: Accuracy.High,\n        enableHighAccuracy: true\n      });\n      setLocation(initialLocation);\n      // console.log(initialLocation)\n      templocation = initialLocation\n\n\n      const intervalId = setInterval(async () => {\n        let updatedLocation = await Location.getCurrentPositionAsync({});\n        setLocation(updatedLocation);\n        templocation = updatedLocation\n        // console.log(templocation.timestamp + \", a\")\n        // console.log(templocation.coords.speed + \", d\")\n        // updatedLocation.remove();\n\n      }, coords_interval_ms);\n\n      return () => {\n        clearInterval(intervalId);\n      };\n\n      // const locationListener = await Location.watchPositionAsync(\n      //   { timeInterval: coords_interval_ms },\n      //   (newLocation) => {\n      //     setLocation(newLocation);\n      //     templocation = newLocation\n      //     console.log(templocation.timestamp + \", b\")\n      //     console.log(templocation.coords.speed + \", c\")\n      //     locationListener.remove();\n      //   }\n      // );\n\n      // return () => {\n      //   if (locationListener) {\n      //     locationListener.remove();\n      //   }\n      // };\n\n      \n    })();\n    const interval = setInterval(() => {\n      var curtime = Date.now()/1000\n\n      // if (temp_coords_x > 600) {\n      //   testingTime = Date.now()/1000\n      // }\n\n      \n      try {\n        // console.log(\"ti \" + templocation.timestamp);\n        // console.log(\"la \" + templocation.coords.latitude);\n        // console.log(\"lo \" + templocation.coords.longitude);\n        // console.log(\"sp \" + templocation.coords.speed);\n        send_coords_latlong(\n          client, \n          templocation.coords.latitude, \n          templocation.coords.longitude, \n          curtime,\n          placename\n        )\n      } catch {\n        console.log(\"Location hasn't been allowed yet\")\n      }\n\n      // send_coords(client, temp_coords_x, temp_coords_y, curtime)\n      // temp_coords_x += 20.3\n      // temp_coords_y += 0\n      // temp_coords_x = Math.round(temp_coords_x*100)/100\n      // temp_coords_y = Math.round(temp_coords_y*100)/100\n      // updateCoordsX(temp_coords_x)\n      // updateCoordsY(temp_coords_y)\n      // console.log(curtime - lasttimestamp)\n      if (lasttimestamp != 0 && curtime - lasttimestamp >= 10) {\n        setalive(3)\n      }\n      \n\n    }, coords_interval_ms);\n    return () => clearInterval(interval);\n  }, [])\n\n  function send_coords(c, coordsx, coordsy, time) {\n    const message = new Paho.Message((ped_id + \",\" + coordsx + \",\" + coordsy + ',' + time).toString());\n    message.destinationName = sendtopic;\n    try {\n      c.send(message);\n    } catch {\n      console.log(\"Failed to send message. Try refreshing?\")\n    }\n\n  }\n\n  function send_coords_latlong(c, lat, long, time, place) {\n\n    const message = new Paho.Message((\n      ped_id + \",\" + \n      lat + \",\" + \n      long + \",\" + \n      time + \",\" +\n      place\n    ).toString());\n\n    message.destinationName = sendtopic;\n\n    try {\n      c.send(message);\n    } catch {\n      console.log(\"Failed to send message. Try refreshing?\")\n    }\n\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={{height: '40%', alignItems: 'center', justifyContent: 'center',}}>\n        <Text style={{color: alive_chart[good]['color'], fontSize: 50}}>\n          {alive_chart[good]['text']}\n        </Text>\n      </View>\n      <View style={{height: '50%', alignItems: 'center', justifyContent: 'center'}} onLayout={(event) => {\n      var {x, y, width, height} = event.nativeEvent.layout;\n      changeGraphHeight(height)\n      changeGraphWidth(width)}}>\n        <ScatterPlot \n          gridSize={10}\n          futuredata={futureData}\n          realtimedata={realtimeData}\n          width={graphWidth}\n          height={graphHeight}\n        />\n        <Text>Real Time Graph of Trajectories</Text>\n      </View>\n      <View style={{height: '10%', alignItems: 'center', justifyContent: 'center',}}>\n        <Text>\n          Your Coords: ({location.coords.latitude}, {location.coords.longitude}) {'\\n'}\n          Timestamp: {location.timestamp}\n        </Text>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  graph: {\n    flex: 1,\n    width: 300,\n  },\n  image: {\n    flex: 1,\n    justifyContent: 'center',\n    width:300,\n    height:'61%'\n  },\n});\n\nexport default App"],"mappings":";;AAUA,OAAOA,IAAI,MAAM,WAAW;AAE5B,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,eAAA;AAE/B,SAASC,GAAG,EAAEC,MAAM,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,SAASC,KAAK,QAAQ,SAAS;AAC/B,OAAO,KAAKC,QAAQ,MAAM,eAAe;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1C,IAAIC,MAAM;AACV,IAAIC,MAAM,GAAGC,QAAQ,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;AAC1C,IAAIC,UAAU,GAAG,EAAE;AACnB,IAAIC,YAAY,GAAG,EAAE;AACrB,IAAIC,YAAY,GAAG;EACjBC,SAAS,EAAE,IAAI;EACfC,MAAM,EAAE;IACNC,QAAQ,EAAE,IAAI;IACdC,SAAS,EAAE,IAAI;IACfC,KAAK,EAAE;EACT;AACF,CAAC;AACD,IAAIC,aAAa,GAAG,CAAC;AACrB,IAAIC,SAAS,GAAG,EAAE;AAMlB,IAAMC,kBAAkB,GAAG,GAAG;AAC9B,IAAMC,YAAY,GAAG,wCAAwC,GAAGf,MAAM;AACtE,IAAMgB,SAAS,GAAG,qCAAqC;AAGvD,IAAMC,iBAAiB,GAAG;EACxB,SAAS,EAAE,CACT,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CACtB;EACD,KAAK,EAAE,CACL,CAAC,EAAE,GAAG;AAEV,CAAC;AACD,IAAMC,WAAW,GAAG;EAClB,CAAC,EAAE;IACDC,IAAI,EAAE,gBAAgB;IACtBC,KAAK,EAAE;EACT,CAAC;EACD,CAAC,EAAE;IACDD,IAAI,EAAE,kCAAkC;IACxCC,KAAK,EAAE;EACT,CAAC;EACD,CAAC,EAAE;IACDD,IAAI,EAAE,sBAAsB;IAC5BC,KAAK,EAAE;EACT,CAAC;EACD,CAAC,EAAE;IACDD,IAAI,EAAE,sBAAsB;IAC5BC,KAAK,EAAE;EACT;AACF,CAAC;AAED,IAAIC,UAAU,GAAG,EAAE;AAGnB,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAGC,KAAK,EAAI;EAE3B,IAAMC,eAAe,GAAG,CACtB;IACE,OAAO,EAAE,SAAS;IAClB,GAAG,EAAE,GAAG;IACR,GAAG,EAAE;EACP,CAAC,CACF;EAED,IAAIC,SAAS,GAAG,GAAG;EACnB,IAAIC,SAAS,GAAG,GAAG;EAEnB,IAAMC,SAAS,GAAG,CAAC;EACnB,IAAMC,OAAO,GAAG,CAAC;EACjB,IAAMC,UAAU,GAAG,GAAG;EACtB,IAAMC,SAAS,GAAG,GAAG;EACrB,IAAIC,WAAW,GAAG,8BAA8B;EAChDlB,SAAS,GAAG,oBAAoB;EAUhC,IAAMmB,KAAK,GAAG,CAACH,UAAU,GAACF,SAAS,IAAIJ,KAAK,CAACU,KAAK;EAClDP,SAAS,GAAGA,SAAS,GAAGM,KAAK;EAC7BP,SAAS,GAAGA,SAAS,GAAGO,KAAK;EAC7B,IAAME,MAAM,GAAGjC,QAAQ,CAAC,CAAC6B,SAAS,GAAGF,OAAO,IAAII,KAAK,CAAC;EACtD,IAAMC,KAAK,GAAGV,KAAK,CAACU,KAAK;EAEzB,IAAME,UAAU,GAAGlC,QAAQ,CAACgC,KAAK,GAAGR,SAAS,CAAC;EAC9C,IAAMW,UAAU,GAAGnC,QAAQ,CAACiC,MAAM,GAAGR,SAAS,CAAC;EAC/C,OACE9B,IAAA,CAACP,eAAe;IAChBgD,MAAM,EAAEC,OAAO,+BAA+B,CAAE;IAChDC,UAAU,EAAC,OAAO;IAClBC,KAAK,EAAE;MAACC,IAAI,EAAE,CAAC;MACbC,cAAc,EAAE,QAAQ;MAExBR,MAAM,EAACA;IACP,CAAE;IACJS,UAAU,EAAE;MAACC,OAAO,EAAC;IAAG,CAAE;IAAAC,QAAA,EACxB/C,KAAA,CAACR,GAAG;MAACkD,KAAK,EAAEM,MAAM,CAACC,KAAM;MAAAF,QAAA,GAGtBG,KAAK,CAACC,IAAI,CAACD,KAAK,CAACb,UAAU,GAAC,CAAC,CAAC,CAAC,CAACe,GAAG,CAAC,UAACC,CAAC,EAAEC,KAAK;QAAA,OAC5CxD,IAAA,CAACJ,IAAI;UAEH6D,EAAE,EAAED,KAAK,GAAG3B,SAAU;UACtB6B,EAAE,EAAE,CAAE;UACNC,EAAE,EAAEH,KAAK,GAAG3B,SAAU;UACtB+B,EAAE,EAAEtB,MAAO;UACXuB,MAAM,EAAC,MAAM;UACbC,WAAW,EAAC;QAAM,iBANDN,KAOlB,CAAC;MAAA,CACH,CAAC,EAGDJ,KAAK,CAACC,IAAI,CAACD,KAAK,CAACZ,UAAU,GAAC,CAAC,CAAC,CAAC,CAACc,GAAG,CAAC,UAACC,CAAC,EAAEC,KAAK;QAAA,OAC5CxD,IAAA,CAACJ,IAAI;UAEH6D,EAAE,EAAE,CAAE;UACNC,EAAE,EAAEF,KAAK,GAAG1B,SAAU;UACtB6B,EAAE,EAAEtB,KAAM;UACVuB,EAAE,EAAEJ,KAAK,GAAG1B,SAAU;UACtB+B,MAAM,EAAC,MAAM;UACbC,WAAW,EAAC;QAAM,mBANCN,KAOpB,CAAC;MAAA,CACH,CAAC,EAGD7B,KAAK,CAACoC,UAAU,CAACT,GAAG,CAAC,UAACU,OAAO,EAAEC,SAAS;QAAA,OACvCD,OAAO,CAACV,GAAG,CAAC,UAACY,KAAK,EAAEV,KAAK;UAAA,OACvBxD,IAAA,CAACL,MAAM;YAEPwE,EAAE,EAAE,CAACD,KAAK,CAACE,CAAC,GAAGrC,SAAS,IAAIK,KAAM;YAClCiC,EAAE,EAAE,CAACH,KAAK,CAACI,CAAC,GAAGtC,OAAO,IAAII,KAAM;YAChCmC,CAAC,EAAE,CAAE;YACLC,IAAI,EAAEN,KAAK,CAAC1C;UAAM,GAJbgC,KAKN,CAAC;QAAA,CACD,CAAC;MAAA,CAEH,CAAC,EAED7B,KAAK,CAAC8C,YAAY,CAACnB,GAAG,CAAC,UAACY,KAAK,EAAED,SAAS;QAAA,OACvCjE,IAAA,CAACL,MAAM;UAEPwE,EAAE,EAAE,CAACD,KAAK,CAACE,CAAC,GAAGrC,SAAS,IAAIK,KAAM;UAClCiC,EAAE,EAAE,CAACH,KAAK,CAACI,CAAC,GAAGtC,OAAO,IAAII,KAAM;UAChCmC,CAAC,EAAE,CAAE;UACLC,IAAI,EAAEN,KAAK,CAAC1C;QAAM,GAJbyC,SAKN,CAAC;MAAA,CAED,CAAC,EAEDrC,eAAe,CAAC0B,GAAG,CAAC,UAACoB,MAAM,EAAEC,WAAW;QAAA,OACvC3E,IAAA,CAACL,MAAM;UAEP6E,IAAI,EAAE,MAAO;UACbL,EAAE,EAAE,GAAI;UACRE,EAAE,EAAE,GAAI;UACRE,CAAC,EAAE;QAAG,GAJD,QAKN,CAAC;MAAA,CAED,CAAC;IAAA,CACC;EAAC,CACS,CAAC;AAEtB,CAAC;AAED,IAAIK,SAAS,GAAG,KAAK;AAErB,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAEhB,IAAAC,SAAA,GAAyB9F,QAAQ,CAAC,CAAC,CAAC;IAAA+F,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7BG,IAAI,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACrB,IAAAI,UAAA,GAAiCnG,QAAQ,CAAC,GAAG,CAAC;IAAAoG,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAvCE,OAAO,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAC7B,IAAAG,UAAA,GAAiCvG,QAAQ,CAAC,CAAC,CAAC;IAAAwG,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAArCE,OAAO,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAE7B,IAAAG,UAAA,GAAuC3G,QAAQ,CAACQ,UAAU,CAACoG,GAAG,CAAC,QAAQ,CAAC,CAACtD,MAAM,CAAC;IAAAuD,UAAA,GAAAb,cAAA,CAAAW,UAAA;IAAzEG,UAAU,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EACnC,IAAAG,UAAA,GAAyChH,QAAQ,CAACQ,UAAU,CAACoG,GAAG,CAAC,QAAQ,CAAC,CAACtD,MAAM,CAAC;IAAA2D,WAAA,GAAAjB,cAAA,CAAAgB,UAAA;IAA3EE,WAAW,GAAAD,WAAA;IAAEE,iBAAiB,GAAAF,WAAA;EAErC,IAAAG,eAAA,GAA0BlH,KAAK,CAACF,QAAQ,CAAC,CAAC;IAAAqH,gBAAA,GAAArB,cAAA,CAAAoB,eAAA;IAAnCE,KAAK,GAAAD,gBAAA;IAAEE,QAAQ,GAAAF,gBAAA;EAItB,IAAAG,WAAA,GAAgCxH,QAAQ,CAAC;MACvC2B,SAAS,EAAE,IAAI;MACfC,MAAM,EAAE;QACNC,QAAQ,EAAE,IAAI;QACdC,SAAS,EAAE,IAAI;QACfC,KAAK,EAAE;MACT;IACF,CAAC,CAAC;IAAA0F,WAAA,GAAAzB,cAAA,CAAAwB,WAAA;IAPKE,QAAQ,GAAAD,WAAA;IAAEE,WAAW,GAAAF,WAAA;EAQ5B,IAAAG,WAAA,GAAgC5H,QAAQ,CAAC,IAAI,CAAC;IAAA6H,WAAA,GAAA7B,cAAA,CAAA4B,WAAA;IAAvCE,QAAQ,GAAAD,WAAA;IAAEE,WAAW,GAAAF,WAAA;EAAmB,SAEhCG,SAASA,CAAA;IAAA,OAAAC,UAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,WAAA;IAAAA,UAAA,GAAAG,iBAAA,CAAxB,aAA2B;MACzB,IAAIxC,SAAS,IAAI,KAAK,EAAE;QACtByC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAC5B,IAAAC,qBAAA,SAAsB1H,KAAK,CAAC2H,KAAK,CAACC,WAAW,CAAE/E,OAAO,qBAAqB,CAAE,CAAC;UAAvE4D,MAAK,GAAAiB,qBAAA,CAALjB,KAAK;QACZC,QAAQ,CAACD,MAAK,CAAC;QAGfe,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAC5B,MAAMhB,MAAK,CAACoB,SAAS,CAAC,CAAC;QAEvB9C,SAAS,GAAG,IAAI;MAClB;IACF,CAAC;IAAA,OAAAqC,UAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SACcQ,SAASA,CAAA;IAAA,OAAAC,UAAA,CAAAV,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAS,WAAA;IAAAA,UAAA,GAAAR,iBAAA,CAAxB,aAA2B,CAO3B,CAAC;IAAA,OAAAQ,UAAA,CAAAV,KAAA,OAAAC,SAAA;EAAA;EAID,SAASU,OAAOA,CAACC,GAAG,EAAE;IACpB,IAAIA,GAAG,CAACC,eAAe,KAAK5G,YAAY,EAAE;MAC1CH,aAAa,GAAGgH,IAAI,CAACC,GAAG,CAAC,CAAC,GAAC,IAAI;MAE/B,IAAIC,OAAO,GAAG,EAAE;MAChB,IAAI;QAEFA,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACN,GAAG,CAACO,aAAa,CAAC;MACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdjB,OAAO,CAACC,GAAG,CAACQ,GAAG,CAACO,aAAa,CAAC;QAC9BhB,OAAO,CAACiB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;MAIA,IAAIJ,OAAO,CAAC,QAAQ,CAAC,KAAK,KAAK,EAAE;QAC/B5I,SAAS,CAACiJ,OAAO,CAAClH,iBAAiB,CAAC9B,QAAQ,CAACiJ,EAAE,CAAC,CAAC;QAEjDtD,QAAQ,CAAC,CAAC,CAAC;QACX8B,SAAS,CAAC,CAAC;MACb,CAAC,MACI,IAAIkB,OAAO,CAAC,QAAQ,CAAC,KAAK,MAAM,EAAE;QACrC5I,SAAS,CAACmJ,MAAM,CAAC,CAAC;QAElBvD,QAAQ,CAAC,CAAC,CAAC;QACXyC,SAAS,CAAC,CAAC;MACb,CAAC,MACI,IAAIO,OAAO,CAAC,QAAQ,CAAC,KAAK,MAAM,EAAE;QACrC1H,UAAU,GAAG,EAAE;QACfC,YAAY,GAAG,EAAE;QACjByH,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAACQ,OAAO,CAAC,UAACnF,CAAC,EAAEoF,GAAG,EAAK;UAC3CnI,UAAU,CAACoI,IAAI,CAACV,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAACS,GAAG,CAAC,CAAC;QAChD,CAAC,CAAC;QACFT,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAACQ,OAAO,CAAC,UAACnF,CAAC,EAAEoF,GAAG,EAAK;UAC3CnI,UAAU,CAACoI,IAAI,CAACV,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAACS,GAAG,CAAC,CAAC;QAChD,CAAC,CAAC;QACFT,OAAO,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAACQ,OAAO,CAAC,UAACnF,CAAC,EAAEoF,GAAG,EAAK;UAC7ClI,YAAY,CAACmI,IAAI,CAACV,OAAO,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAACS,GAAG,CAAC,CAAC;QACpD,CAAC,CAAC;QACFT,OAAO,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAACQ,OAAO,CAAC,UAACnF,CAAC,EAAEoF,GAAG,EAAK;UAC7ClI,YAAY,CAACmI,IAAI,CAACV,OAAO,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAACS,GAAG,CAAC,CAAC;QACpD,CAAC,CAAC;MACJ;IAIF;EAAC;EAED1J,SAAS,CAAC,YAAM;IACdkB,MAAM,GAAG,IAAIpB,IAAI,CAAC8J,MAAM,CACtB,mBAAmB,EACnBC,MAAM,CAAC,IAAI,CAAC,mBACG1I,MACjB,CAAC;IACDD,MAAM,CAAC4I,OAAO,CACZ;MACEC,SAAS,EAAE,SAAAA,UAAA,EAAM;QACjB3B,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QACzBnH,MAAM,CAAC8I,SAAS,CAAC9H,YAAY,CAAC;QAC9BhB,MAAM,CAAC+I,gBAAgB,GAAGrB,OAAO;MACnC,CAAC;MACDsB,SAAS,EAAE,SAAAA,UAAA,EAAM;QACf9B,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;QACjCpC,QAAQ,CAAC,CAAC,CAAC;MACb;IACA,CACF,CAAC;IACDkC,iBAAA,CAAC,aAAY;MACX,IAAAgC,qBAAA,SAAuBtJ,QAAQ,CAACuJ,iCAAiC,CAAC,CAAC;QAA7DC,MAAM,GAAAF,qBAAA,CAANE,MAAM;MACZ,IAAIA,MAAM,KAAK,SAAS,EAAE;QACxBvC,WAAW,CAAC,0CAA0C,CAAC;QACvD;MACF;MAGA,IAAIwC,eAAe,SAASzJ,QAAQ,CAAC0J,uBAAuB,CAAC;QAE3DC,kBAAkB,EAAE;MACtB,CAAC,CAAC;MACF9C,WAAW,CAAC4C,eAAe,CAAC;MAE5B7I,YAAY,GAAG6I,eAAe;MAG9B,IAAMG,UAAU,GAAGC,WAAW,CAAAvC,iBAAA,CAAC,aAAY;QACzC,IAAIwC,eAAe,SAAS9J,QAAQ,CAAC0J,uBAAuB,CAAC,CAAC,CAAC,CAAC;QAChE7C,WAAW,CAACiD,eAAe,CAAC;QAC5BlJ,YAAY,GAAGkJ,eAAe;MAKhC,CAAC,GAAE1I,kBAAkB,CAAC;MAEtB,OAAO,YAAM;QACX2I,aAAa,CAACH,UAAU,CAAC;MAC3B,CAAC;IAoBH,CAAC,EAAE,CAAC;IACJ,IAAMI,QAAQ,GAAGH,WAAW,CAAC,YAAM;MACjC,IAAII,OAAO,GAAG/B,IAAI,CAACC,GAAG,CAAC,CAAC,GAAC,IAAI;MAO7B,IAAI;QAKF+B,mBAAmB,CACjB7J,MAAM,EACNO,YAAY,CAACE,MAAM,CAACC,QAAQ,EAC5BH,YAAY,CAACE,MAAM,CAACE,SAAS,EAC7BiJ,OAAO,EACP9I,SACF,CAAC;MACH,CAAC,CAAC,OAAAgJ,OAAA,EAAM;QACN5C,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MACjD;MAUA,IAAItG,aAAa,IAAI,CAAC,IAAI+I,OAAO,GAAG/I,aAAa,IAAI,EAAE,EAAE;QACvDkE,QAAQ,CAAC,CAAC,CAAC;MACb;IAGF,CAAC,EAAEhE,kBAAkB,CAAC;IACtB,OAAO;MAAA,OAAM2I,aAAa,CAACC,QAAQ,CAAC;IAAA;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,SAASI,WAAWA,CAACC,CAAC,EAAE9E,OAAO,EAAEI,OAAO,EAAE2E,IAAI,EAAE;IAC9C,IAAMlC,OAAO,GAAG,IAAInJ,IAAI,CAACsL,OAAO,CAAC,CAACjK,MAAM,GAAG,GAAG,GAAGiF,OAAO,GAAG,GAAG,GAAGI,OAAO,GAAG,GAAG,GAAG2E,IAAI,EAAEE,QAAQ,CAAC,CAAC,CAAC;IAClGpC,OAAO,CAACH,eAAe,GAAG3G,SAAS;IACnC,IAAI;MACF+I,CAAC,CAACI,IAAI,CAACrC,OAAO,CAAC;IACjB,CAAC,CAAC,OAAAsC,QAAA,EAAM;MACNnD,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;IACxD;EAEF;EAEA,SAAS0C,mBAAmBA,CAACG,CAAC,EAAEM,GAAG,EAAEC,IAAI,EAAEN,IAAI,EAAEO,KAAK,EAAE;IAEtD,IAAMzC,OAAO,GAAG,IAAInJ,IAAI,CAACsL,OAAO,CAAC,CAC/BjK,MAAM,GAAG,GAAG,GACZqK,GAAG,GAAG,GAAG,GACTC,IAAI,GAAG,GAAG,GACVN,IAAI,GAAG,GAAG,GACVO,KAAK,EACLL,QAAQ,CAAC,CAAC,CAAC;IAEbpC,OAAO,CAACH,eAAe,GAAG3G,SAAS;IAEnC,IAAI;MACF+I,CAAC,CAACI,IAAI,CAACrC,OAAO,CAAC;IACjB,CAAC,CAAC,OAAA0C,QAAA,EAAM;MACNvD,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;IACxD;EAEF;EAEA,OACEpH,KAAA,CAACb,IAAI;IAACuD,KAAK,EAAEM,MAAM,CAAC2H,SAAU;IAAA5H,QAAA,GAC5BjD,IAAA,CAACX,IAAI;MAACuD,KAAK,EAAE;QAACN,MAAM,EAAE,KAAK;QAAEwI,UAAU,EAAE,QAAQ;QAAEhI,cAAc,EAAE;MAAS,CAAE;MAAAG,QAAA,EAC5EjD,IAAA,CAACZ,IAAI;QAACwD,KAAK,EAAE;UAACpB,KAAK,EAAEF,WAAW,CAAC2D,IAAI,CAAC,CAAC,OAAO,CAAC;UAAE8F,QAAQ,EAAE;QAAE,CAAE;QAAA9H,QAAA,EAC5D3B,WAAW,CAAC2D,IAAI,CAAC,CAAC,MAAM;MAAC,CACtB;IAAC,CACH,CAAC,EACP/E,KAAA,CAACb,IAAI;MAACuD,KAAK,EAAE;QAACN,MAAM,EAAE,KAAK;QAAEwI,UAAU,EAAE,QAAQ;QAAEhI,cAAc,EAAE;MAAQ,CAAE;MAACkI,QAAQ,EAAE,SAAAA,SAACC,KAAK,EAAK;QACnG,IAAAC,qBAAA,GAA4BD,KAAK,CAACE,WAAW,CAACC,MAAM;UAA/ChH,CAAC,GAAA8G,qBAAA,CAAD9G,CAAC;UAAEE,CAAC,GAAA4G,qBAAA,CAAD5G,CAAC;UAAEjC,KAAK,GAAA6I,qBAAA,CAAL7I,KAAK;UAAEC,MAAM,GAAA4I,qBAAA,CAAN5I,MAAM;QACxB6D,iBAAiB,CAAC7D,MAAM,CAAC;QACzByD,gBAAgB,CAAC1D,KAAK,CAAC;MAAA,CAAE;MAAAY,QAAA,GACvBjD,IAAA,CAAC0B,WAAW;QACV2J,QAAQ,EAAE,EAAG;QACbtH,UAAU,EAAEvD,UAAW;QACvBiE,YAAY,EAAEhE,YAAa;QAC3B4B,KAAK,EAAEyD,UAAW;QAClBxD,MAAM,EAAE4D;MAAY,CACrB,CAAC,EACFlG,IAAA,CAACZ,IAAI;QAAA6D,QAAA,EAAC;MAA+B,CAAM,CAAC;IAAA,CACxC,CAAC,EACPjD,IAAA,CAACX,IAAI;MAACuD,KAAK,EAAE;QAACN,MAAM,EAAE,KAAK;QAAEwI,UAAU,EAAE,QAAQ;QAAEhI,cAAc,EAAE;MAAS,CAAE;MAAAG,QAAA,EAC5E/C,KAAA,CAACd,IAAI;QAAA6D,QAAA,GAAC,gBACU,EAACyD,QAAQ,CAAC9F,MAAM,CAACC,QAAQ,EAAC,IAAE,EAAC6F,QAAQ,CAAC9F,MAAM,CAACE,SAAS,EAAC,IAAE,EAAC,IAAI,EAAC,aAClE,EAAC4F,QAAQ,CAAC/F,SAAS;MAAA,CAC1B;IAAC,CACH,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,IAAMuC,MAAM,GAAG/D,UAAU,CAACmM,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACThI,IAAI,EAAE,CAAC;IACP0I,eAAe,EAAE,MAAM;IACvBT,UAAU,EAAE,QAAQ;IACpBhI,cAAc,EAAE;EAClB,CAAC;EACDK,KAAK,EAAE;IACLN,IAAI,EAAE,CAAC;IACPR,KAAK,EAAE;EACT,CAAC;EACDmJ,KAAK,EAAE;IACL3I,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBT,KAAK,EAAC,GAAG;IACTC,MAAM,EAAC;EACT;AACF,CAAC,CAAC;AAEF,eAAeuC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}